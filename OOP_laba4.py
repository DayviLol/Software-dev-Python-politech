class Дерево:
    """Базовый класс для всех деревьев."""

    def __init__(self, вид: str, высота: float, возраст: int):
        """Конструктор дерева.

        Args:
            вид (str): Вид дерева.
            высота (float): Высота дерева в метрах.
            возраст (int): Возраст дерева в годах.
        """
        self.вид = вид
        self.высота = высота
        self.возраст = возраст

    def __str__(self) -> str:
        """Возвращает строковое представление дерева.

        Returns:ы
            str: Строковое представление дерева.
        """
        return f"{self.вид} ({self.высота} м, {self.возраст} лет)"

    def __repr__(self) -> str:
        """Возвращает строковое представление объекта дерева.

        Returns:
            str: Строковое представление объекта дерева.
        """
        return f"Дерево({self.вид}, {self.высота}, {self.возраст})"

    def расти(self, прирост: float):
        """Увеличивает высоту дерева на заданный прирост.

        Args:
            прирост (float): Прирост высоты в метрах.
        """
        self.высота += прирост


class Ель(Дерево):
    """Дочерний класс для елей."""

    def __init__(self, вид: str, высота: float, возраст: int, форма_кроны: str):
        """Конструктор ели.

        Args:
            вид (str): Вид ели.
            высота (float): Высота ели в метрах.
            возраст (int): Возраст ели в годах.
            форма_кроны (str): Форма кроны ели.
        """
        super().__init__(вид, высота, возраст)
        self.форма_кроны = форма_кроны

    def __str__(self) -> str:
        """Возвращает строковое представление ели.

        Returns:
            str: Строковое представление ели.
        """
        return super().__str__() + f", форма кроны: {self.форма_кроны}"

    def __repr__(self) -> str:
        """Возвращает строковое представление объекта ели.

        Returns:
            str: Строковое представление объекта ели.
        """
        return f"Ель({self.вид}, {self.высота}, {self.возраст}, {self.форма_кроны})"

    def сбросить_хвою(self):
        """Метод, который имитирует сбрасывание хвои елью."""
        pass
